name: Version release

on:
  push:
    tags:
      - 'v*.*.*'
    paths-ignore:
    - '**.md'
    - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [integration-tests-core-base,integration-tests-core-case,integration-tests-core-checklists,integration-tests-sqlcontroller-base,integration-tests-sqlcontroller-case,integration-tests-sqlcontroller-checklists,unit-tests-base,unit-tests-checklists,unit-tests-insight]
    steps:
    - uses: actions/checkout@v2
    - uses: getong/rabbitmq-action@v1.2
      with:
        rabbitmq version: 'latest'
        host port: 5672
        rabbitmq user: 'admin'
        rabbitmq password: 'password'
        rabbitmq vhost: 'vhost_name'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d "v" -f 2)
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: ${{matrix.test}}
      run: ./${{matrix.test}}.sh

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d "v" -f 2)
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Pack
      run: dotnet pack eFormSDK.sln -c Release -o ./artifacts -p:PackageVersion=${{ steps.get_version.outputs.VERSION }}
    - name: Push generated package to GitHub registry
      run: dotnet nuget push /home/runner/work/eform-sdk-dotnet/eform-sdk-dotnet/artifacts/Microting.eForm.${{ steps.get_version.outputs.VERSION }}.nupkg -k ${{secrets.NUGET_SECRET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
    - name: Notify slack fail
      if: ${{ failure() }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: C013XLR1C3F
        status: FAILED
        color: danger
